{
	"status": {},
	"contains_secrets": false,
	"product_version": "3.3.1",
	"spec": {
		"description": "",
		"resources": {
			"client_attrs": {
				"None": {
					"y": 160.25,
					"x": 189.5390625
				},
				"decb8265_deployment": {
					"y": -554.5,
					"x": 259
				}
			},
			"service_definition_list": [{
				"singleton": false,
				"action_list": [{
					"description": "System action for creating an application",
					"type": "system",
					"critical": false,
					"runbook": {
						"task_definition_list": [{
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "3b8701f6_dag",
							"attrs": {
								"edges": [],
								"type": ""
							},
							"timeout_secs": "0",
							"type": "DAG",
							"variable_list": []
						}],
						"description": "",
						"name": "244932b5_runbook",
						"main_task_local_reference": {
							"kind": "app_task",
							"name": "3b8701f6_dag"
						},
						"variable_list": []
					},
					"name": "action_create"
				}, {
					"description": "System action for deleting an application. Deletes created VMs as well",
					"type": "system",
					"critical": false,
					"runbook": {
						"task_definition_list": [{
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "3fddfa76_dag",
							"attrs": {
								"edges": [],
								"type": ""
							},
							"timeout_secs": "0",
							"type": "DAG",
							"variable_list": []
						}],
						"description": "",
						"name": "3b982661_runbook",
						"main_task_local_reference": {
							"kind": "app_task",
							"name": "3fddfa76_dag"
						},
						"variable_list": []
					},
					"name": "action_delete"
				}, {
					"description": "System action for starting an application",
					"type": "system",
					"critical": false,
					"runbook": {
						"task_definition_list": [{
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "267fcd78_dag",
							"attrs": {
								"edges": [],
								"type": ""
							},
							"timeout_secs": "0",
							"type": "DAG",
							"variable_list": []
						}],
						"description": "",
						"name": "292034ce_runbook",
						"main_task_local_reference": {
							"kind": "app_task",
							"name": "267fcd78_dag"
						},
						"variable_list": []
					},
					"name": "action_start"
				}, {
					"description": "System action for stopping an application",
					"type": "system",
					"critical": false,
					"runbook": {
						"task_definition_list": [{
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "5c64d685_dag",
							"attrs": {
								"edges": [],
								"type": ""
							},
							"timeout_secs": "0",
							"type": "DAG",
							"variable_list": []
						}],
						"description": "",
						"name": "4fcf4ddc_runbook",
						"main_task_local_reference": {
							"kind": "app_task",
							"name": "5c64d685_dag"
						},
						"variable_list": []
					},
					"name": "action_stop"
				}, {
					"description": "System action for restarting an application",
					"type": "system",
					"critical": false,
					"runbook": {
						"task_definition_list": [{
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "cb5d5768_dag",
							"attrs": {
								"edges": [],
								"type": ""
							},
							"timeout_secs": "0",
							"type": "DAG",
							"variable_list": []
						}],
						"description": "",
						"name": "06ce90e3_runbook",
						"main_task_local_reference": {
							"kind": "app_task",
							"name": "cb5d5768_dag"
						},
						"variable_list": []
					},
					"name": "action_restart"
				}],
				"depends_on_list": [],
				"name": "Provisioning VM",
				"port_list": [],
				"tier": "",
				"variable_list": [{
					"val_type": "STRING",
					"is_mandatory": false,
					"description": "",
					"data_type": "BASE",
					"type": "LOCAL",
					"name": "blueprint_uuid",
					"value": "",
					"label": "",
					"attrs": {
						"type": ""
					},
					"is_hidden": false,
					"options": {
						"type": "PREDEFINED",
						"choices": []
					}
				}, {
					"val_type": "STRING",
					"is_mandatory": false,
					"description": "",
					"data_type": "BASE",
					"type": "LOCAL",
					"name": "variable_list",
					"value": "",
					"label": "",
					"attrs": {
						"type": ""
					},
					"is_hidden": false,
					"options": {
						"type": "PREDEFINED",
						"choices": []
					}
				}, {
					"val_type": "STRING",
					"is_mandatory": false,
					"description": "",
					"data_type": "BASE",
					"type": "LOCAL",
					"name": "launch_uuid",
					"value": "",
					"label": "",
					"attrs": {
						"type": ""
					},
					"is_hidden": false,
					"options": {
						"type": "PREDEFINED",
						"choices": []
					}
				}, {
					"val_type": "STRING",
					"is_mandatory": false,
					"description": "",
					"data_type": "BASE",
					"type": "SECRET",
					"name": "KUBEADMIN",
					"value": "",
					"label": "",
					"attrs": {
						"is_secret_modified": false,
						"secret_reference": {},
						"type": "SECRET"
					},
					"is_hidden": false,
					"options": {
						"type": "PREDEFINED",
						"choices": []
					}
				}, {
					"val_type": "STRING",
					"is_mandatory": false,
					"description": "",
					"data_type": "BASE",
					"type": "SECRET",
					"name": "KUBECONFIG",
					"value": "",
					"label": "",
					"attrs": {
						"is_secret_modified": false,
						"secret_reference": {},
						"type": "SECRET"
					},
					"is_hidden": false,
					"options": {
						"type": "PREDEFINED",
						"choices": []
					}
				}],
				"description": ""
			}],
			"substrate_definition_list": [{
				"description": "",
				"action_list": [],
				"type": "AHV_VM",
				"name": "Provisioning_VM",
				"readiness_probe": {
					"connection_type": "SSH",
					"retries": "5",
					"connection_protocol": "",
					"connection_port": 22,
					"address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
					"delay_secs": "60",
					"disable_readiness_probe": false,
					"login_credential_local_reference": {
						"kind": "app_credential",
						"name": "CRED"
					}
				},
				"os_type": "Linux",
				"create_spec": {
					"name": "Openshift-provisioning-@@{calm_array_index}@@-@@{calm_time}@@",
					"resources": {
						"nic_list": [{
							"nic_type": "NORMAL_NIC",
							"ip_endpoint_list": [],
							"network_function_chain_reference": null,
							"network_function_nic_type": "INGRESS",
							"mac_address": "",
							"subnet_reference": {
								"kind": "subnet",
								"type": "",
								"name": "Primary",
								"uuid": "510865ba-8a63-4a48-8057-cf7b13cfdede"
							},
							"type": ""
						}],
						"serial_port_list": [],
						"guest_tools": null,
						"num_vcpus_per_socket": 2,
						"num_sockets": 2,
						"gpu_list": [],
						"memory_size_mib": 4096,
						"parent_reference": null,
						"hardware_clock_timezone": "",
						"guest_customization": {
							"cloud_init": {
								"meta_data": "",
								"type": "",
								"user_data": "#cloud-config\nusers:\n  - name: @@{CRED.username}@@\n    ssh-authorized-keys:\n      - @@{CRED.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\nwrite_files:\n  - path: \/etc\/NetworkManager\/conf.d\/90-dns-none.conf\n    content: |\n      [main]\n      dns=none"
							},
							"type": "",
							"sysprep": null
						},
						"power_state": "ON",
						"type": "",
						"account_uuid": "9acb40ad-068c-42fd-aa8e-ffa52445fcd8",
						"boot_config": {
							"boot_device": {
								"type": "",
								"disk_address": {
									"type": "",
									"device_index": 0,
									"adapter_type": "SCSI"
								}
							},
							"type": "",
							"boot_type": "LEGACY",
							"mac_address": ""
						},
						"disk_list": [{
							"data_source_reference": {
								"kind": "app_package",
								"type": "",
								"name": "Centos84",
								"uuid": "97920c97-39d2-3b9a-2176-68c3192ed6ed"
							},
							"type": "",
							"disk_size_mib": 0,
							"volume_group_reference": null,
							"device_properties": {
								"type": "",
								"disk_address": {
									"type": "",
									"device_index": 0,
									"adapter_type": "SCSI"
								},
								"device_type": "DISK"
							}
						}]
					},
					"availability_zone_reference": null,
					"backup_policy": null,
					"type": "",
					"cluster_reference": null,
					"categories": ""
				},
				"variable_list": []
			}],
			"credential_definition_list": [{
				"username": "core",
				"description": "",
				"type": "KEY",
				"secret": {
					"attrs": {
						"is_secret_modified": false,
						"secret_reference": {}
					}
				},
				"name": "CRED",
				"cred_class": "static"
			}],
			"package_definition_list": [{
				"description": "",
				"action_list": [],
				"type": "DEB",
				"service_local_reference_list": [{
					"kind": "app_service",
					"name": "Provisioning VM"
				}],
				"name": "Setup",
				"version": "",
				"options": {
					"install_runbook": {
						"task_definition_list": [{
							"target_any_local_reference": {
								"kind": "app_package",
								"name": "Setup"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [{
								"kind": "app_task",
								"name": "Setup"
							}],
							"name": "5707bf52_dag",
							"attrs": {
								"edges": [],
								"type": ""
							},
							"timeout_secs": "0",
							"type": "DAG",
							"variable_list": []
						}, {
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "Setup",
							"attrs": {
								"exit_status": [],
								"script": "#!\/bin\/bash -e\n\n# Get machine IP\nMACHINE_IP=\"@@{address}@@\"\nSSH_USER=\"@@{CRED.username}@@\"\n\n# Inject ssh key pair into the VM for provisioning support\nmkdir -m 700 -p ~\/.ssh\ncat <<EOF >~\/.ssh\/id_rsa\n@@{CRED.secret}@@\nEOF\nchmod 600 ~\/.ssh\/id_rsa\ncat <<EOF > ~\/.ssh\/id_rsa.pub\n@@{CRED.public_key}@@\nEOF\n\n# Update resolv.conf\n# Env setup\nmkdir -p openshift\ncd openshift\n\n# Install dependencies\nsudo yum -y update\nsudo yum -y install jq haproxy httpd python3\n\n# Disable selinux\nsudo setenforce 0\nsudo sed -i.bkp -r 's\/(SELINUX=)enforcing\/\\1disabled\/g;s\/^SELINUXTYPE=targeted\/#&\/g' \/etc\/selinux\/config\n\n# Download Openshift installer\ncurl -o openshift-install-linux.tar.gz \"@@{openshift_install_linux}@@\"\ntar xzf openshift-install-linux.tar.gz\nsudo install -m 755 -o root openshift-install \/sbin\/\n\n# Download coreos-installer\ncurl -o coreos-installer \"@@{coreos_installer}@@\"\nsudo install -m 755 -o root coreos-installer \/sbin\/\n\n# Download Openshift client\ncurl -o openshift-client-linux.tar.gz \"@@{openshift_client_linux}@@\"\ntar xzf openshift-client-linux.tar.gz\nsudo install -m 755 -o root oc \/sbin\/\n\n# Download RHCOS 4.7 iso\ncurl -o rhcos-live.x86_64.iso \"@@{rhcos_live}@@\"\n\n# Create Web Repo\nmkdir web\ncp coreos-installer ~\/openshift\/web\nmv openshift-client-linux.tar.gz ~\/openshift\/web\nmv openshift-install-linux.tar.gz ~\/openshift\/web\n\n# Change ownership of openshift dir to expose iso and igntion over an http endpoint\nsudo chown -R apache: ~\/openshift\/web\nsudo chmod 755 \"\/home\/${USER}\"\n\n# Configure and start apache on port 8080\nsudo sed -i.bkp 's\/Listen 80\/&80\/g' \/etc\/httpd\/conf\/httpd.conf\necho \"Alias \/openshift \/home\/${SSH_USER}\/openshift\/web\n<Directory \/home\/${SSH_USER}\/openshift\/web>\nOptions -Indexes\nRequire all granted\n<\/Directory>\" | sudo tee -a \/etc\/httpd\/conf.d\/openshift.conf\n# Enable and start apache\nsudo systemctl enable httpd\nsudo systemctl start httpd\n",
								"script_type": "sh",
								"type": "",
								"command_line_args": "",
								"login_credential_local_reference": {
									"kind": "app_credential",
									"name": "CRED"
								}
							},
							"timeout_secs": "0",
							"type": "EXEC",
							"variable_list": []
						}],
						"description": "",
						"name": "20d21b90_runbook",
						"main_task_local_reference": {
							"kind": "app_task",
							"name": "5707bf52_dag"
						},
						"variable_list": []
					},
					"type": "",
					"uninstall_runbook": {
						"task_definition_list": [{
							"target_any_local_reference": {
								"kind": "app_package",
								"name": "Setup"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "a643dfca_dag",
							"attrs": {
								"edges": [],
								"type": ""
							},
							"timeout_secs": "0",
							"type": "DAG",
							"variable_list": []
						}],
						"description": "",
						"name": "24fb9eac_runbook",
						"main_task_local_reference": {
							"kind": "app_task",
							"name": "a643dfca_dag"
						},
						"variable_list": []
					}
				},
				"variable_list": []
			}, {
				"description": "",
				"action_list": [],
				"type": "SUBSTRATE_IMAGE",
				"service_local_reference_list": [],
				"name": "Centos84",
				"version": "",
				"options": {
					"type": "",
					"name": "Centos84",
					"resources": {
						"image_type": "DISK_IMAGE",
						"checksum": {},
						"source_uri": "https:\/\/cloud.centos.org\/centos\/8-stream\/x86_64\/images\/CentOS-Stream-GenericCloud-8-20210603.0.x86_64.qcow2",
						"version": {
							"product_version": "1.0.0",
							"type": "",
							"product_name": "Centos84"
						},
						"architecture": "X86_64",
						"type": ""
					},
					"description": ""
				},
				"variable_list": []
			}],
			"app_profile_list": [{
				"deployment_create_list": [{
					"type": "GREENFIELD",
					"action_list": [],
					"name": "decb8265_deployment",
					"min_replicas": "1",
					"default_replicas": "1",
					"depends_on_list": [],
					"published_service_local_reference_list": [],
					"max_replicas": "1",
					"package_local_reference_list": [{
						"kind": "app_package",
						"name": "Setup"
					}],
					"substrate_local_reference": {
						"kind": "app_substrate",
						"name": "Provisioning_VM"
					},
					"variable_list": [],
					"description": ""
				}],
				"environment_reference_list": [],
				"patch_list": [],
				"description": "",
				"action_list": [{
					"description": "",
					"type": "user",
					"critical": false,
					"runbook": {
						"task_definition_list": [{
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [{
								"kind": "app_task",
								"name": "Prepare Env"
							}, {
								"kind": "app_task",
								"name": "Auth"
							}, {
								"kind": "app_task",
								"name": "Fetch BP UUID"
							}, {
								"kind": "app_task",
								"name": "run Blueprint"
							}, {
								"kind": "app_task",
								"name": "Monitor BP"
							}],
							"name": "99ba075b_dag",
							"attrs": {
								"edges": [{
									"from_task_reference": {
										"kind": "app_task",
										"name": "Fetch BP UUID"
									},
									"edge_type": "user_defined",
									"type": "",
									"to_task_reference": {
										"kind": "app_task",
										"name": "run Blueprint"
									}
								}, {
									"from_task_reference": {
										"kind": "app_task",
										"name": "run Blueprint"
									},
									"edge_type": "user_defined",
									"type": "",
									"to_task_reference": {
										"kind": "app_task",
										"name": "Monitor BP"
									}
								}, {
									"from_task_reference": {
										"kind": "app_task",
										"name": "Prepare Env"
									},
									"edge_type": "user_defined",
									"type": "",
									"to_task_reference": {
										"kind": "app_task",
										"name": "Auth"
									}
								}, {
									"from_task_reference": {
										"kind": "app_task",
										"name": "Auth"
									},
									"edge_type": "user_defined",
									"type": "",
									"to_task_reference": {
										"kind": "app_task",
										"name": "Fetch BP UUID"
									}
								}],
								"type": ""
							},
							"timeout_secs": "0",
							"type": "DAG",
							"variable_list": []
						}, {
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "Prepare Env",
							"attrs": {
								"exit_status": [],
								"script": "#!\/bin\/bash -e\n\ncd ~\/openshift\n\n# Create ignition config used for generation of ignition files\ncat <<EOF > install-config.yaml\napiVersion: v1\nbaseDomain: @@{BASE_DOMAIN}@@\nmetadata:\n  name: @@{OCP_SUBDOMAIN}@@\ncompute:\n-  name: worker # add argument\n   replicas: @@{WORKER}@@\ncontrolPlane:\n  name: master # add argument\n  replicas: 3 # default\nnetworking:\n  clusterNetwork:\n  - cidr: @@{OCP_CLUSTER_NETWORK}@@\n    hostPrefix: @@{OCP_CLUSTER_HOSTPREFIX}@@\n  serviceNetwork:\n   - @@{OCP_SERVICE_NETWORK}@@\n  machineNetwork:\n  - cidr: @@{OCP_MACHINE_NETWORK}@@\nplatform:\n  none: {}\npullSecret: '@@{OCP_PULL_SECRET}@@'\nsshKey: \"@@{CRED.public_key}@@\"\nEOF\n\n# Ignition file generation\n# This will generate bootstrap.ign,master.ign and worker.ign files\n# Ignition files are used for RCHCOS installation(similar to kickstart for RHEL)\nopenshift-install create ignition-configs\n\n# Get private IP address of primary interface\n# MACHINE_IP=$(ip -4 a show eth0  | awk '\/inet\/ {gsub(\/\\\/[0-9]+\/,\"\",$2);print $2}')\n\n# Embed MachineConfig for iscsid in ignition files\n\necho \"bootstrap.ign\nmaster.ign\nworker.ign\"| while read i; do\nj=${i%.*}\n#Check if self-deployed DNS must be patched into Iginition Files\njq '.systemd.units +=[{\"name\": \"iscsid.service\",\"enabled\": true}]' ${i} > ${j}_@@{OCP_SUBDOMAIN}@@.ign\n\ndone\n\n# Copy RHCOS Image\n# Embed bootstrap ignition config in ISO for first boot\n# All VMs initially boot from ISO with embedded bootstrap ignition\n# coreos-installer is used to install OS on hdd for specific roles via ignition files after first boot\ncoreos-installer iso ignition embed -i bootstrap_@@{OCP_SUBDOMAIN}@@.ign rhcos-live.x86_64.iso -o rhcos-@@{OCP_SUBDOMAIN}@@.iso\n\nsudo mv rhcos-@@{OCP_SUBDOMAIN}@@.iso ~\/openshift\/web\nsudo mv *_@@{OCP_SUBDOMAIN}@@.ign ~\/openshift\/web\nsudo chown apache: ~\/openshift\/web\/*\n\nrm *.ign\nrm metadata.json",
								"script_type": "sh",
								"type": "",
								"command_line_args": "",
								"login_credential_local_reference": {
									"kind": "app_credential",
									"name": "CRED"
								}
							},
							"timeout_secs": "0",
							"type": "EXEC",
							"variable_list": []
						}, {
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "Auth",
							"attrs": {
								"exit_status": [],
								"script": "cd openshift\/auth\necho KUBECONFIG=\"$(base64 -w 0 kubeconfig)\"\necho KUBEADMIN=\"$(base64 -w 0 kubeadmin-password)\"\n\nrm kubeconfig\nrm kubeadmin-password",
								"eval_variables": ["KUBECONFIG", "KUBEADMIN"],
								"eval_scope": "local",
								"script_type": "sh",
								"type": "",
								"login_credential_local_reference": {
									"kind": "app_credential",
									"name": "CRED"
								}
							},
							"timeout_secs": "0",
							"type": "SET_VARIABLE",
							"variable_list": []
						}, {
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "Fetch BP UUID",
							"attrs": {
								"exit_status": [],
								"script": "#region define variables\njwt     = '@@{calm_jwt}@@'\napi_server = \"localhost\"\napi_server_port = \"9440\"\napi_server_endpoint = \"\/api\/nutanix\/v3\/blueprints\/list\"\nbp = \"@@{OCP_BP}@@\"\n\nlength = 100\nurl = \"https:\/\/{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\n#endregion\n\n# region prepare api call\nmethod = \"POST\"\nheaders = {\n    'Content-Type': 'application\/json',\n    'Accept': 'application\/json',\n    'Authorization': 'Bearer {}'.format(jwt)\n}\n\n# Compose the json payload\npayload = {\n  \"kind\": \"blueprint\",\n  \"offset\": 0,\n  \"length\": length\n}\n# endregion\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nr = urlreq(\n    url,\n    verb=method,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results\nif r.ok:\n  for entity in json.loads(r.content)['entities']:\n    #print entity\n    if entity['status']['name'] == bp:\n      blueprint_uuid=entity['status']['uuid']\n      print 'blueprint_uuid='+blueprint_uuid\n# If the call failed\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\", json.dumps(\n        json.loads(r.content),\n        indent=4\n    ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion\n",
								"eval_variables": ["blueprint_uuid"],
								"eval_scope": "local",
								"type": "",
								"script_type": "static"
							},
							"timeout_secs": "0",
							"type": "SET_VARIABLE",
							"variable_list": []
						}, {
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "run Blueprint",
							"attrs": {
								"exit_status": [],
								"script": " #region define variables\njwt     = '@@{calm_jwt}@@'\napi_server = \"localhost\"\napi_server_port = \"9440\"\napi_server_endpoint = \"\/api\/nutanix\/v3\/blueprints\/{}\/runtime_editables\".format(\"@@{blueprint_uuid}@@\")\n\nlength = 100\nurl = \"https:\/\/{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\n#endregion\n\n# region prepare api call\nmethod = \"GET\"\nheaders = {\n    'Content-Type': 'application\/json',\n    'Accept': 'application\/json',\n    'Authorization': 'Bearer {}'.format(jwt)\n}\n\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nr = urlreq(\n    url,\n    verb=method,\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results\nif r.ok:\n    resp_json = json.loads(r.content)\n    #variable_list = json.dumps(json_resp['resources'][0]['runtime_editables']['variable_list'])\n# If the call failed\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\")\n    exit(1)\n# endregion\n\n\n#### RUN BP\n\n#region define variables\napi_server_endpoint = \"\/api\/nutanix\/v3\/blueprints\/{}\/simple_launch\".format(\"@@{blueprint_uuid}@@\")\n\nlength = 100\nurl = \"https:\/\/{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\n#endregion\n\n# region prepare api call\nmethod = \"POST\"\nheaders = {\n    'Content-Type': 'application\/json',\n    'Accept': 'application\/json',\n    'Authorization': 'Bearer {}'.format(jwt)\n}\n\n# Compose the json payload\npayload = {\n  \"spec\": {\n    \"app_name\": \"Openshift @@{OCP_SUBDOMAIN}@@\",\n    \"app_description\": \"Automated OCP Tenant\",\n    \"app_profile_reference\": {\n      \"kind\": \"app_profile\",\n      \"name\": \"\"\n    },\n    \"runtime_editables\": {\n      \"variable_list\":[],\n      \"credential_list\":[]\n    }\n  }\n}\n\nif (@@{WORKER}@@==0):\n\tpayload['spec']['app_profile_reference']['name']='MasterOnly'\nelse:\n\tpayload['spec']['app_profile_reference']['name']='MasterWorker'\n\n\npayload['spec']['runtime_editables']['variable_list']=resp_json['resources'][0]['runtime_editables']['variable_list']\npayload['spec']['runtime_editables']['credential_list']=resp_json['resources'][0]['runtime_editables']['credential_list']\n\npayload['spec']['runtime_editables']['variable_list'][0]['value']['value']=\"@@{BASE_DOMAIN}@@\"\npayload['spec']['runtime_editables']['variable_list'][1]['value']['value']=\"@@{OCP_SUBDOMAIN}@@\"\npayload['spec']['runtime_editables']['variable_list'][2]['value']['value']=\"@@{address}@@\"\npayload['spec']['runtime_editables']['variable_list'][3]['value']['value']=\"@@{OCP_MACHINE_NETWORK}@@\"\npayload['spec']['runtime_editables']['variable_list'][4]['value']['value']='@@{KUBECONFIG}@@'\npayload['spec']['runtime_editables']['variable_list'][5]['value']['value']='@@{KUBEADMIN}@@'\npayload['spec']['runtime_editables']['variable_list'][6]['value']['value']='@@{platform.status.resources.nic_list[0].subnet_reference.uuid}@@'\npayload['spec']['runtime_editables']['variable_list'][7]['value']['value']='@@{WORKER}@@'\n\npayload['spec']['runtime_editables']['credential_list'][0]['value']['secret']['attrs']['is_secret_modified']=True\n\nol_cred =\"\"\"@@{CRED.secret}@@\"\"\"\npayload['spec']['runtime_editables']['credential_list'][0]['value']['secret']['value']=ol_cred\n\nprint payload\n# endregion\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nr = urlreq(\n    url,\n    verb=method,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results\nif r.ok:\n    resp_json = json.loads(r.content)\n    print \"launch_uuid={}\".format(resp_json[\"status\"][\"request_id\"])\n# If the call failed\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\", json.dumps(\n        json.loads(r.content),\n        indent=4\n    ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion",
								"eval_variables": ["launch_uuid"],
								"eval_scope": "local",
								"type": "",
								"script_type": "static"
							},
							"timeout_secs": "0",
							"type": "SET_VARIABLE",
							"variable_list": []
						}, {
							"target_any_local_reference": {
								"kind": "app_service",
								"name": "Provisioning VM"
							},
							"retries": "0",
							"description": "",
							"child_tasks_local_reference_list": [],
							"name": "Monitor BP",
							"attrs": {
								"script": " #region define variables\njwt     = '@@{calm_jwt}@@'\napi_server = \"localhost\"\napi_server_port = \"9440\"\napi_server_endpoint = \"\/api\/nutanix\/v3\/blueprints\/{}\/pending_launches\/{}\".format(\"@@{blueprint_uuid}@@\",\"@@{launch_uuid}@@\")\n\nlength = 100\nurl = \"https:\/\/{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\n#endregion\n\n# region prepare api call\nmethod = \"GET\"\nheaders = {\n    'Content-Type': 'application\/json',\n    'Accept': 'application\/json',\n    'Authorization': 'Bearer {}'.format(jwt)\n}\n\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nr = urlreq(\n    url,\n    verb=method,\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results\nif r.ok:\n    print r.content\n    #variable_list = json.dumps(json_resp['resources'][0]['runtime_editables']['variable_list'])\n# If the call failed\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\")\n    exit(1)\n# endregion\n",
								"type": "",
								"command_line_args": "",
								"exit_status": [],
								"script_type": "static"
							},
							"timeout_secs": "0",
							"type": "EXEC",
							"variable_list": []
						}],
						"description": "",
						"name": "3cc54f0e_runbook",
						"main_task_local_reference": {
							"kind": "app_task",
							"name": "99ba075b_dag"
						},
						"variable_list": [{
							"val_type": "STRING",
							"is_mandatory": false,
							"description": "",
							"data_type": "BASE",
							"type": "LOCAL",
							"name": "OCP_BP",
							"value": "OCP_Master_Worker",
							"label": "",
							"attrs": {
								"type": ""
							},
							"editables": {
								"value": true
							},
							"is_hidden": false,
							"options": {
								"type": "PREDEFINED",
								"choices": []
							}
						}, {
							"val_type": "STRING",
							"is_mandatory": false,
							"description": "",
							"data_type": "BASE",
							"type": "LOCAL",
							"name": "OCP_CLUSTER_HOSTPREFIX",
							"value": "23",
							"label": "",
							"attrs": {
								"type": ""
							},
							"editables": {
								"value": true
							},
							"is_hidden": false,
							"options": {
								"type": "PREDEFINED",
								"choices": []
							}
						}, {
							"val_type": "STRING",
							"is_mandatory": false,
							"description": "",
							"data_type": "BASE",
							"type": "LOCAL",
							"name": "OCP_CLUSTER_NETWORK",
							"value": "10.128.0.0\/14",
							"label": "",
							"attrs": {
								"type": ""
							},
							"editables": {
								"value": true
							},
							"is_hidden": false,
							"options": {
								"type": "PREDEFINED",
								"choices": []
							}
						}, {
							"val_type": "STRING",
							"is_mandatory": false,
							"description": "",
							"data_type": "BASE",
							"type": "LOCAL",
							"name": "OCP_SERVICE_NETWORK",
							"value": "172.30.0.0\/16",
							"label": "",
							"attrs": {
								"type": ""
							},
							"editables": {
								"value": true
							},
							"is_hidden": false,
							"options": {
								"type": "PREDEFINED",
								"choices": []
							}
						}, {
							"val_type": "STRING",
							"is_mandatory": false,
							"description": "",
							"data_type": "BASE",
							"type": "LOCAL",
							"name": "OCP_MACHINE_NETWORK",
							"value": "",
							"label": "",
							"attrs": {
								"type": ""
							},
							"editables": {
								"value": true
							},
							"is_hidden": false,
							"options": {
								"type": "PREDEFINED",
								"choices": []
							}
						}, {
							"val_type": "STRING",
							"is_mandatory": false,
							"description": "",
							"data_type": "BASE",
							"type": "LOCAL",
							"name": "OCP_SUBDOMAIN",
							"value": "xyz1",
							"label": "",
							"attrs": {
								"type": ""
							},
							"editables": {
								"value": true
							},
							"is_hidden": false,
							"options": {
								"type": "PREDEFINED",
								"choices": []
							}
						}, {
							"val_type": "STRING",
							"is_mandatory": false,
							"description": "",
							"data_type": "BASE",
							"type": "LOCAL",
							"name": "BASE_DOMAIN",
							"value": "ntnxlab.local",
							"label": "",
							"attrs": {
								"type": ""
							},
							"editables": {
								"value": true
							},
							"is_hidden": false,
							"options": {
								"type": "PREDEFINED",
								"choices": []
							}
						}, {
							"val_type": "STRING",
							"is_mandatory": false,
							"description": "",
							"data_type": "BASE",
							"type": "LOCAL",
							"name": "OCP_PULL_SECRET",
							"value": "",
							"label": "",
							"attrs": {
								"type": "LOCAL"
							},
							"editables": {
								"value": true
							},
							"is_hidden": false,
							"options": {
								"type": "PREDEFINED",
								"choices": []
							}
						}, {
							"regex": {
								"should_validate": true,
								"value": "^([1-4][0-9]|[0,2-9])$"
							},
							"val_type": "STRING",
							"is_mandatory": false,
							"description": "Should be 0 or 2+, Stage2 Blueprint needs support for this",
							"data_type": "BASE",
							"type": "LOCAL",
							"name": "WORKER",
							"value": "0",
							"label": "Number of Workers",
							"attrs": {
								"type": ""
							},
							"editables": {
								"value": true
							},
							"is_hidden": false,
							"options": {
								"type": "PREDEFINED",
								"choices": []
							}
						}]
					},
					"name": "Deploy OCP"
				}],
				"name": "Nutanix",
				"restore_config_list": [],
				"variable_list": [{
					"val_type": "STRING",
					"is_mandatory": false,
					"description": "",
					"data_type": "BASE",
					"type": "LOCAL",
					"name": "coreos_installer",
					"value": "https:\/\/mirror.openshift.com\/pub\/openshift-v4\/clients\/coreos-installer\/latest\/coreos-installer",
					"label": "",
					"attrs": {
						"type": ""
					},
					"editables": {
						"value": true
					},
					"is_hidden": false,
					"options": {
						"type": "PREDEFINED",
						"choices": []
					}
				}, {
					"val_type": "STRING",
					"is_mandatory": false,
					"description": "",
					"data_type": "BASE",
					"type": "LOCAL",
					"name": "openshift_install_linux",
					"value": "https:\/\/mirror.openshift.com\/pub\/openshift-v4\/clients\/ocp\/latest-4.8\/openshift-install-linux.tar.gz",
					"label": "",
					"attrs": {
						"type": ""
					},
					"editables": {
						"value": true
					},
					"is_hidden": false,
					"options": {
						"type": "PREDEFINED",
						"choices": []
					}
				}, {
					"val_type": "STRING",
					"is_mandatory": false,
					"description": "",
					"data_type": "BASE",
					"type": "LOCAL",
					"name": "openshift_client_linux",
					"value": "https:\/\/mirror.openshift.com\/pub\/openshift-v4\/clients\/ocp\/latest-4.8\/openshift-client-linux.tar.gz",
					"label": "",
					"attrs": {
						"type": ""
					},
					"editables": {
						"value": true
					},
					"is_hidden": false,
					"options": {
						"type": "PREDEFINED",
						"choices": []
					}
				}, {
					"val_type": "STRING",
					"is_mandatory": false,
					"description": "",
					"data_type": "BASE",
					"type": "LOCAL",
					"name": "rhcos_live",
					"value": "https:\/\/mirror.openshift.com\/pub\/openshift-v4\/dependencies\/rhcos\/4.8\/latest\/rhcos-live.x86_64.iso",
					"label": "",
					"attrs": {
						"type": ""
					},
					"editables": {
						"value": true
					},
					"is_hidden": false,
					"options": {
						"type": "PREDEFINED",
						"choices": []
					}
				}]
			}],
			"published_service_definition_list": [],
			"default_credential_local_reference": {
				"kind": "app_credential",
				"name": "CRED"
			},
			"type": "USER"
		},
		"name": "XYZ_OCP_Prov_VM_LB"
	},
	"api_version": "3.0",
	"metadata": {
		"last_update_time": "1643866177415982",
		"kind": "blueprint",
		"spec_version": 7,
		"creation_time": "1643862779873391",
		"name": "XYZ_OCP_Prov_VM_LB"
	}
}