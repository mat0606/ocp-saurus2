"use strict";(self.webpackChunkocp_saurus_2=self.webpackChunkocp_saurus_2||[]).push([[4241],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(a),b=r,d=m["".concat(s,".").concat(b)]||m[b]||u[b]||o;return a?n.createElement(d,i(i({ref:t},l),{},{components:a})):n.createElement(d,i({ref:t},l))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[m]="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>b});var n=a(7462),r=a(7294),o=a(6010),i=a(2389),c=a(7392),s=a(7094),p=a(2466);const l="tabList__CuJ",m="tabItem_LNqP";function u(e){const{lazy:t,block:a,defaultValue:i,values:u,groupId:b,className:d}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=u??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),N=(0,c.l)(k,((e,t)=>e.value===t.value));if(N.length>0)throw new Error(`Docusaurus error: Duplicate values "${N.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===i?i:i??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==g&&!k.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:v}=(0,s.U)(),[j,y]=(0,r.useState)(g),_=[],{blockElementScrollPositionUntilNextRender:w}=(0,p.o5)();if(null!=b){const e=f[b];null!=e&&e!==j&&k.some((t=>t.value===e))&&y(e)}const O=e=>{const t=e.currentTarget,a=_.indexOf(t),n=k[a].value;n!==j&&(w(t),y(n),null!=b&&v(b,String(n)))},x=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const a=_.indexOf(e.currentTarget)+1;t=_[a]??_[0];break}case"ArrowLeft":{const a=_.indexOf(e.currentTarget)-1;t=_[a]??_[_.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",l)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},d)},k.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:j===t?0:-1,"aria-selected":j===t,key:t,ref:e=>_.push(e),onKeyDown:x,onClick:O},i,{className:(0,o.Z)("tabs__item",m,i?.className,{"tabs__item--active":j===t})}),a??t)}))),t?(0,r.cloneElement)(h.filter((e=>e.props.value===j))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==j})))))}function b(e){const t=(0,i.Z)();return r.createElement(u,(0,n.Z)({key:String(t)},e))}},5394:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));a(5488),a(5162);const o={sidebar_position:7,title:"Nutanix Objects Metric Monitor with Prometheus"},i="Nutanix Objects Metric Monitor with Prometheus",c={unversionedId:"ocp_object/ocp_object_prometheus",id:"ocp_object/ocp_object_prometheus",title:"Nutanix Objects Metric Monitor with Prometheus",description:"1.  Create this yaml file to enable User Workload monitoring.  Run this command",source:"@site/docs/ocp_object/ocp_object_prometheus.mdx",sourceDirName:"ocp_object",slug:"/ocp_object/ocp_object_prometheus",permalink:"/ocp-saurus2/ocp_object/ocp_object_prometheus",draft:!1,editUrl:"https://github.com/mat0606/ocp-saurus2/edit/main/docs/ocp_object/ocp_object_prometheus.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Nutanix Objects Metric Monitor with Prometheus"},sidebar:"tutorialSidebar",previous:{title:"CSI Metric Monitor with Prometheus",permalink:"/ocp-saurus2/ocp_ntnx_hci/ocp_csi_prometheus"},next:{title:"Create Object Bucket and Access Keys in Nutanix",permalink:"/ocp-saurus2/ocp_object/"}},s={},p=[],l={toc:p};function m(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nutanix-objects-metric-monitor-with-prometheus"},"Nutanix Objects Metric Monitor with Prometheus"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create this yaml file to enable User Workload monitoring.  Run this command"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat << EOF > ./cluster-monitoring.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cluster-monitoring-config\n  namespace: openshift-monitoring\ndata:\n  config.yaml: |\n    enableUserWorkload: true\nEOF\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run this command to apply the change"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc apply -f cluster-monitoring.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create new Project in RedHat OpenShift.  Please use assign OpenShift SubDomain appended with monitoring as the new project"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc new-project ocp1ipi-monitoring\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Login to RedHat OpenShift Console.  Verify the project was created successfully"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(780).Z,width:"903",height:"218"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create Secret for Prism Central.  "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Replace the namespace with the project created earlier."),(0,r.kt)("li",{parentName:"ul"},"Replace the password with the assigned HPOC Prism Central.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc create secret -n ocp1ipi-monitoring generic pc-creds \\\n--from-literal=user=admin \\\n--from-literal=password='passwordtobereplaced'\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create the manifest to connect to Nutanix Objects."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vi object_monitoring.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Paste the contents"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Replace the namespace with the project created earlier."),(0,r.kt)("li",{parentName:"ul"},"Replace the ip with the Prism Central IP address.   ")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'kind: "Endpoints"\napiVersion: "v1"\nmetadata:\n  name: "external-nutanix-objects"\n  namespace: ocp1ipi-monitoring\nsubsets: \n  - addresses:\n      - ip: "x.x.x.x" \n    ports:\n      - port: 9440 \n        name: "objects-metrics"\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run this command to apply the change."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc create -f object_monitoring.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create Service"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Replace the namespace with the project created earlier.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat << EOF > object_monitoring_service.yaml\nkind: "Service"\napiVersion: "v1"\nmetadata:\n  labels:\n    external-infra-monitor: "true"\n  name: "external-nutanix-objects"\n  namespace: ocp1ipi-monitoring\nspec:\n  ports:\n  - name: "objects-metrics"\n    protocol: "TCP"\n    port: 9440\n    targetPort: 9440 \n    nodePort: 0\nselector: {}\nEOF\n\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run this command to create the service"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc create -f object_monitoring_service.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create ServiceMonitor for Statistics and Performance on Objects-Store Level.\n",(0,r.kt)("strong",{parentName:"p"},"Replace the namespace with the project created earlier.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat <<EOF > object_service_monitor.yaml\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: nutanix-objects-store\n  namespace: ocp1ipi-monitoring\nspec:\n  endpoints:\n    - interval: 30s\n      basicAuth:\n        password:\n          name: pc-creds\n          key: password\n        username:\n          name: pc-creds\n          key: user\n      path: /oss/api/nutanix/metrics\n      port: objects-metrics\n      scheme: https\n      tlsConfig:\n        insecureSkipVerify: true\n  selector:\n    matchLabels:\n      external-infra-monitor: "true"\nEOF\n\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run this command to create the service monitor."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc create -f object_service_monitor.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create Service Monitor Manifest for Object Bucket.  ",(0,r.kt)("strong",{parentName:"p"},"Replace the following:")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-note"},"a.  Replace namespace with project created earlier.\nb.  Replace object store name and object store bucket \n    /oss/api/nutanix/metrics/object store name/object store bucket\nwith\n    /oss/api/nutanix/metrics/ntnx-objects/ocp1ipi-bucket\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"This is the contents for the object_bucket_service_monitor.yaml"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat <<EOF > object_bucket_service_monitor.yaml\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: nutanix-objects-mybucket\n  namespace: ocp1ipi-monitoring\nspec:\n  endpoints:\n  - interval: 30s\n    basicAuth:\n      password:\n        name: pc-creds\n        key: password\n      username:\n        name: pc-creds\n        key: user\n    path: /oss/api/nutanix/metrics/ntnx-objects/ocp1ipi-bucket \n    port: objects-metrics\n    scheme: https\n    tlsConfig:\n      insecureSkipVerify: true\n  selector:\n    matchLabels:\n      external-infra-monitor: "true"\nEOF\n\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create the Object Bucket Service Monitor"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc create -f object_bucket_service_monitor.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the RedHat OpenShift console, navigate to ",(0,r.kt)("strong",{parentName:"p"},"Metrics"),".  Navigate to ",(0,r.kt)("strong",{parentName:"p"},"Targets"),".  Filter by ",(0,r.kt)("strong",{parentName:"p"},"Nutanix"),".\nVerify the Object endpoints are available"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"![](ocp_prometheus_images/object-prometheus-3.png)\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on ",(0,r.kt)("strong",{parentName:"p"},"Metrics"),".  Filter by ",(0,r.kt)("strong",{parentName:"p"},"nutanix_objectstore_num_buckets"),".  Click on ",(0,r.kt)("strong",{parentName:"p"},"Run Queries")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(7369).Z,width:"901",height:"330"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The object bucket creation metric was deployed"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(9797).Z,width:"1402",height:"587"})))))}m.isMDXComponent=!0},780:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/object-prometheus-1-0cf4d1bb106371b76e5224e189955243.png"},7369:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/object-prometheus-4-3f1b8b77a4ee7bc1c8cb8ed890c4ab6f.png"},9797:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/object-prometheus-5-7dda042896699d325e6d3a3a79a337dc.png"}}]);