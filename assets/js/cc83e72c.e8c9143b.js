"use strict";(self.webpackChunkocp_saurus_2=self.webpackChunkocp_saurus_2||[]).push([[708],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||l;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(7462),r=a(7294),l=a(6010),o=a(2389),i=a(7392),s=a(7094),p=a(2466);const c="tabList__CuJ",m="tabItem_LNqP";function u(e){const{lazy:t,block:a,defaultValue:o,values:u,groupId:d,className:k}=e,N=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=u??N.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),g=(0,i.l)(h,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===o?o:o??N.find((e=>e.props.default))?.props.value??N[0].props.value;if(null!==f&&!h.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:y}=(0,s.U)(),[C,w]=(0,r.useState)(f),x=[],{blockElementScrollPositionUntilNextRender:I}=(0,p.o5)();if(null!=d){const e=b[d];null!=e&&e!==C&&h.some((t=>t.value===e))&&w(e)}const P=e=>{const t=e.currentTarget,a=x.indexOf(t),n=h[a].value;n!==C&&(I(t),w(n),null!=d&&y(d,String(n)))},v=e=>{let t=null;switch(e.key){case"Enter":P(e);break;case"ArrowRight":{const a=x.indexOf(e.currentTarget)+1;t=x[a]??x[0];break}case"ArrowLeft":{const a=x.indexOf(e.currentTarget)-1;t=x[a]??x[x.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},k)},h.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>x.push(e),onKeyDown:v,onClick:P},o,{className:(0,l.Z)("tabs__item",m,o?.className,{"tabs__item--active":C===t})}),a??t)}))),t?(0,r.cloneElement)(N.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},N.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function d(e){const t=(0,o.Z)();return r.createElement(u,(0,n.Z)({key:String(t)},e))}},6701:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var n=a(7462),r=(a(7294),a(3905)),l=a(5488),o=a(5162);const i={title:"Option 2: IPI Installation"},s="Installation Difference between UPI & IPI",p={unversionedId:"ocp_ipi_install/ocp_ipi_install",id:"ocp_ipi_install/ocp_ipi_install",title:"Option 2: IPI Installation",description:"This picture shows the differences between UPI and IPI installation.  The IPI installer invokes Nutanix",source:"@site/docs/ocp_ipi_install/ocp_ipi_install.mdx",sourceDirName:"ocp_ipi_install",slug:"/ocp_ipi_install/",permalink:"/ocp-saurus2/ocp_ipi_install/",draft:!1,editUrl:"https://github.com/mat0606/ocp-saurus2/edit/main/docs/ocp_ipi_install/ocp_ipi_install.mdx",tags:[],version:"current",frontMatter:{title:"Option 2: IPI Installation"},sidebar:"tutorialSidebar",previous:{title:"Option 1: UPI Installation",permalink:"/ocp-saurus2/ocp_upi_install/"},next:{title:"OCP Assisted Installation",permalink:"/ocp-saurus2/ocp_assisted_install/"}},c={},m=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"High Level Plan",id:"high-level-plan",level:2},{value:"Preparing Pre-requisites",id:"preparing-pre-requisites",level:2},{value:"Preparing your HPOC cluster",id:"preparing-your-hpoc-cluster",level:3},{value:"AHV Networking",id:"ahv-networking",level:3},{value:"Add DNS Records",id:"add-dns-records",level:3},{value:"Downloading OCP Tools",id:"downloading-ocp-tools",level:3},{value:"Creating and Installing SSL Certificate on Prism Central",id:"creating-and-installing-ssl-certificate-on-prism-central",level:3},{value:"Setting up Cloud Credential Operator Utility (CCOCTL)",id:"setting-up-cloud-credential-operator-utility-ccoctl",level:3},{value:"Creating IPI Installation Config File",id:"creating-ipi-installation-config-file",level:2},{value:"Preparing UserXX-LinuxToolsVM",id:"preparing-userxx-linuxtoolsvm",level:3},{value:"Creating the Installation Manifests (files)",id:"creating-the-installation-manifests-files",level:3},{value:"Deploying OCP Cluster",id:"deploying-ocp-cluster",level:2},{value:"Cleanup (optional)",id:"cleanup-optional",level:2}],u={toc:m};function d(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation-difference-between-upi--ipi"},"Installation Difference between UPI & IPI"),(0,r.kt)("p",null,"  This picture shows the differences between UPI and IPI installation.  The IPI installer invokes Nutanix\nPrism Central API to provision the VMs before installing OpenShift."),(0,r.kt)("p",null,"   ",(0,r.kt)("img",{src:a(5767).Z,width:"1121",height:"747"})),(0,r.kt)("h1",{id:"ocp-ipi-installation"},"OCP IPI Installation"),(0,r.kt)("p",null,"OCP Installer Provisioned Installation (IPI) has been released in August 2022. It gives customer a intutive and easy way to deploy OCP cluster on Nutanix AOS."),(0,r.kt)("p",null,"In this lab we will go through the steps of deploying OCP cluster using IPI."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Estimated time to complete this whole lab is ",(0,r.kt)("strong",{parentName:"p"},"60 minutes")," including OCP cluster deployment."),(0,r.kt)("p",{parentName:"admonition"},"The OCP cluster deployment will take up to ",(0,r.kt)("strong",{parentName:"p"},"30 minutes")," once started. ")),(0,r.kt)("admonition",{title:"Setting expectations",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Although it might seem like a lot of work for IPI, the aim of the lab is to take you through the one-time process a customer would go through. Once pre-requisites are set once, customers can deploy as many number of OCP clusters."),(0,r.kt)("p",{parentName:"admonition"},"You could also explore automating these one time pre-requisites preparation tasks using automation frameworks like Nutanix ",(0,r.kt)("strong",{parentName:"p"},"NCM"),".")),(0,r.kt)("admonition",{title:"References",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"We have referred to the following documents for building this lab:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.nutanix.dev/2022/08/16/red-hat-openshift-ipi-on-nutanix-cloud-platform"},"Nutanix Dev - IPI on Nutanix")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.openshift.com/container-platform/4.11/installing/installing_nutanix/installing-nutanix-installer-provisioned.html#installation-configure-proxy_installing-nutanix-installer-provisioned"},"RedHat IPI Installation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://opendocs.nutanix.com/openshift/install/ipi/"},"RedHat IPI SSL Requirements")))),(0,r.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,r.kt)("p",null,"The following pre-requisites are necessary:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Prism Central - ",(0,r.kt)("strong",{parentName:"li"},"pc.2022.6.0.1")),(0,r.kt)("li",{parentName:"ul"},"AOS - ",(0,r.kt)("strong",{parentName:"li"},"6.5.1.8")),(0,r.kt)("li",{parentName:"ul"},"Access to RedHat Console to download the following    ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pull secret"),(0,r.kt)("li",{parentName:"ul"},"IPI installation binaries"),(0,r.kt)("li",{parentName:"ul"},"Openshift access tools (oc, kubectl)"),(0,r.kt)("li",{parentName:"ul"},"Cloud Credential Operator (CCOCTL) utility  binaries"))),(0,r.kt)("li",{parentName:"ul"},"An SSL certificate for Prism Central signed by a Certification Authority (we will also create certificates in this lab)"),(0,r.kt)("li",{parentName:"ul"},"Networking requirements",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"AHV IPAM Network (your HPOC already has this)"),(0,r.kt)("li",{parentName:"ul"},"DNS server (Windows AutoAD VM is pre-deployed for DNS capabilities)"),(0,r.kt)("li",{parentName:"ul"},"Static IP addresses in your AHV IPAM network for OCP's api and apps endpoints ")))),(0,r.kt)("h2",{id:"high-level-plan"},"High Level Plan"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Prepare pre-requiisites",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"AHV Networking and DNS"),(0,r.kt)("li",{parentName:"ul"},"OCP tools "))),(0,r.kt)("li",{parentName:"ol"},"Prepare and install SSL certificate for Prism Central"),(0,r.kt)("li",{parentName:"ol"},"Creating OCP IPI installation manifest files  "),(0,r.kt)("li",{parentName:"ol"},"Installing OCP cluster and first login")),(0,r.kt)("h2",{id:"preparing-pre-requisites"},"Preparing Pre-requisites"),(0,r.kt)("p",null,"We will be deploying OCP cluster using IPI method once the following pre-requisites are met. Be sure to make sure all pre-requisites are prepared."),(0,r.kt)("h3",{id:"preparing-your-hpoc-cluster"},"Preparing your HPOC cluster"),(0,r.kt)("admonition",{title:"Do you have enough compute resources?",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If you are working on a HPOC cluster, make sure there are enough resources available to deploy a new OCP cluster."),(0,r.kt)("p",{parentName:"admonition"},"Remove existing OCP clusters that you don't require anymore."),(0,r.kt)("p",{parentName:"admonition"},"For latest OCP resource requirements refer to OpenShift portal ",(0,r.kt)("a",{parentName:"p",href:"https://docs.openshift.com/container-platform/4.9/installing/installing_platform_agnostic/installing-platform-agnostic.html#installation-minimum-resource-requirements_installing-platform-agnostic"},"here.")),(0,r.kt)("p",{parentName:"admonition"},"At the time of writing this document the following resources are created by OCP IPI installer."),(0,r.kt)("p",{parentName:"admonition"},"We will create the following minimum amount of resources:"),(0,r.kt)("table",{parentName:"admonition"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"OCP Role"),(0,r.kt)("th",{parentName:"tr",align:null},"Operating System"),(0,r.kt)("th",{parentName:"tr",align:null},"vCPU"),(0,r.kt)("th",{parentName:"tr",align:null},"RAM"),(0,r.kt)("th",{parentName:"tr",align:null},"Storage"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Master"),(0,r.kt)("td",{parentName:"tr",align:null},"RHCOS"),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"16 GB"),(0,r.kt)("td",{parentName:"tr",align:null},"120 GB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Worker"),(0,r.kt)("td",{parentName:"tr",align:null},"RHCOS, RHEL 7.9, or RHEL 8.4"),(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"16 GB"),(0,r.kt)("td",{parentName:"tr",align:null},"120 GB")))),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"Reserve some additional space for bootstrap vms (deleted after install) and RHCOS image files."))),(0,r.kt)("h3",{id:"ahv-networking"},"AHV Networking"),(0,r.kt)("p",null,"We will first find two IPs for OCP ",(0,r.kt)("inlineCode",{parentName:"p"},"api")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"apps")," ingress endpoints in our network and add it to the ",(0,r.kt)("strong",{parentName:"p"},"Primary")," IPAM network blacklist. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Find the CIDR range for your  ",(0,r.kt)("strong",{parentName:"p"},"Primary")," IPAM network either from ",(0,r.kt)("a",{parentName:"p",href:"https://rx.corp.nutanix.com/"},"RX")," or from your instrutor"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="CIDR example for your Nutanix cluster"',title:'"CIDR',example:!0,for:!0,your:!0,Nutanix:!0,'cluster"':!0},"10.38.238.160/27\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Logon to your UserXX-LinuxToolsVM (deployed on the HPOC cluster) using Mac Terminal or Windows Putty "),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Username"),": root")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Password"),": default "))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Prepare the UserXX-LinuxToolsVM "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yum update -y\nyum install -y nmap\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Find two unused static IP addresses"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -v -sn  <your CIDR>\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Sample command"',title:'"Sample','command"':!0},"nmap -v -sn 10.38.238.160/27\n\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'{1,2} title="Sample output - choose the first two consecutive IPs"',"{1,2}":!0,title:'"Sample',output:!0,"-":!0,choose:!0,the:!0,first:!0,two:!0,consecutive:!0,'IPs"':!0},"Nmap scan report for 10.38.238.161 [host down] \nNmap scan report for 10.38.238.162 [host down]\nNmap scan report for 10.38.18.163\nHost is up (-0.098s latency).\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Logon to any CVM (Find the CVM from the Trainer) in your cluster and execute the following to add chosen static IPs to the ",(0,r.kt)("strong",{parentName:"p"},"Secondary")," IPAM network"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Username: nutanix"),(0,r.kt)("li",{parentName:"ul"},"Password: your cluster password ")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"acli net.add_to_ip_blacklist <your-ipam-ahv-network> ip_list=<ip address 1>,<ip address 2>\n")))),(0,r.kt)("h3",{id:"add-dns-records"},"Add DNS Records"),(0,r.kt)("p",null,"In this section we will add PC, API and APPS Ingress DNS records for lookup by OCP IPI installer."),(0,r.kt)("p",null,"Your OCP cluster's name becomes a subdomain in your DNS zone ",(0,r.kt)("inlineCode",{parentName:"p"},"ntnxlab.local"),". All OCP cluster related lookups are located within subdomain."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Main domain -  ",(0,r.kt)("inlineCode",{parentName:"li"},"ntnxlab.local")," (this gets created with your HPOC reservation)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Sub domain - ",(0,r.kt)("inlineCode",{parentName:"li"},"xyz.ntnxlab.local")," (xyz is your OCP cluster's name)")))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Logon to the AutoAD windows VM "),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Username"),": administrator")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Password"),": Please check with your trainer"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"We will add the following entries to DNS server using the two consecutive IPs you found in the previous section"),(0,r.kt)("admonition",{parentName:"li",title:"Use your HPOC cluster's IP Addresses",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"The IP addresses in the following commands are used as an example. You should use IP address details that belong to your HPOC cluster. For information on locating your cluster IP see Getting Started ",(0,r.kt)("a",{parentName:"p",href:"/ocp-saurus2/#networking"},"Networking")," section. ")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless"},"<IP address 1>   api.your_ocp_cluster_subdomain.ntnxlab.local\n<IP address 2>   *.apps.your_ocp_cluster_subdomain.ntnxlab.local\n10.38.x.39   pc.ntnxlab.local\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open PowerShell as Administrator and create the two A records"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Add the API A record - use your own subdomain"',title:'"Add',the:!0,API:!0,A:!0,record:!0,"-":!0,use:!0,your:!0,own:!0,'subdomain"':!0},"Add-DnsServerResourceRecordA -Name api.<your_ocp_cluster_subdomain> -IPv4Address <your API IP> -ZoneName ntnxlab.local -ZoneScope ntnxlab.local\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Add the apps Ingress A record - use your own subdomain"',title:'"Add',the:!0,apps:!0,Ingress:!0,A:!0,record:!0,"-":!0,use:!0,your:!0,own:!0,'subdomain"':!0},"Add-DnsServerResourceRecordA -Name *.apps.<your_ocp_cluster_subdomain> -IPv4Address <your Ingress IP> -ZoneName ntnxlab.local -ZoneScope ntnxlab.local \n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Add the Prism Central A record"',title:'"Add',the:!0,Prism:!0,Central:!0,A:!0,'record"':!0},"Add-DnsServerResourceRecordA -Name pc -IPv4Address <your PC IP> -ZoneName ntnxlab.local -ZoneScope ntnxlab.local \n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:"title=\"Sample commands with 'xyz' as a subdomain and your OCP cluster name\"",title:'"Sample',commands:!0,with:!0,"'xyz'":!0,as:!0,a:!0,subdomain:!0,and:!0,your:!0,OCP:!0,cluster:!0,'name"':!0},"Add-DnsServerResourceRecordA -Name api.xyz -IPv4Address 10.38.238.161 -ZoneName ntnxlab.local -ZoneScope ntnxlab.local\nAdd-DnsServerResourceRecordA -Name *.apps.xyz -IPv4Address 10.38.238.162 -ZoneName ntnxlab.local -ZoneScope ntnxlab.local \nAdd-DnsServerResourceRecordA -Name pc -IPv4Address 10.38.238.39 -ZoneName ntnxlab.local -ZoneScope ntnxlab.local\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Test name resolution for added entries"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"nslookup api.<your_ocp_cluster_subdomain>\nnslookup myapp.apps.<your_ocp_cluster_subdomain>\nnslookup pc.ntnxlab.local\n")))),(0,r.kt)("h3",{id:"downloading-ocp-tools"},"Downloading OCP Tools"),(0,r.kt)("p",null,"We will need to the OCP tools mentioned in the pre-requisites section to prepare our environment"),(0,r.kt)("admonition",{title:"OCP Tools information",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can get the URLs to download the tools and pull secret from RedHat Console: "),(0,r.kt)("p",{parentName:"admonition"},"Openshift > Clusters > Create Clusters > Datacenter > ",(0,r.kt)("a",{parentName:"p",href:"https://console.redhat.com/openshift/install/nutanix/installer-provisioned"},"Nutanix AOS")),(0,r.kt)("p",{parentName:"admonition"},"In this section please using the download links provided is also ok. ")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Logon to LinuxToolVM (Eg LinuxToolVM2,3 or 4) and download the binaries "),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Username"),": root")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Password"),": default ")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir xyz\ncd xyz\ncurl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-install-linux.tar.gz\ncurl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-client-linux.tar.gz \n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Extract the binaries and copy them to ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/local/bin")," for pathless access"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tar xvf openshift-install-linux.tar.gz\ntar xvf openshift-client-linux.tar.gz \n# Adding to path \ncp kubectl /usr/local/bin\ncp oc /usr/local/bin\ncp openshift-install /usr/local/bin\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go to the ",(0,r.kt)("a",{parentName:"p",href:"https://console.redhat.com/openshift/install/nutanix/installer-provisioned"},"IPI Installer Web Console")," and click on ",(0,r.kt)("strong",{parentName:"p"},"Copy pull secret")," button")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now that the pull secret value is in your clipboard, paste the contents string to a pull secret file in the same directory"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vi pull_secret.json\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure all the files are in the xyz directory "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls -l \n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'{5} title="Directory listing"',"{5}":!0,title:'"Directory','listing"':!0},"-rwxr-xr-x 2 root root 123877776 Aug 29 16:30 kubectl\n-rwxr-xr-x 2 root root 123877776 Aug 29 16:30 oc\ndrwxr-x--- 2 root root      4096 Sep 22 06:56 openshift\n-rwxr-xr-x 1 root root 481972224 Sep  1 16:07 openshift-install\n-rw-r--r-- 1 root root      2819 Sep 22 05:27 pull_secret.json\n")))),(0,r.kt)("h3",{id:"creating-and-installing-ssl-certificate-on-prism-central"},"Creating and Installing SSL Certificate on Prism Central"),(0,r.kt)("p",null,"In this section we will do the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a Root CA on your LinuxToolVM "),(0,r.kt)("li",{parentName:"ul"},"Create a Certificate Signing Request (CSR) for Prism Central "),(0,r.kt)("li",{parentName:"ul"},"Sign the CSR using Root CA's private key")),(0,r.kt)("p",null,"All this will be done on the LinuxToolVM."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the LinuxToolVM (Eg LinuxToolVM2), Create a the Root CA certificates"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl genrsa -out rootCA.key 2048\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days 1024 -out rootCA.crt\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Execution example - make sure to retype the input values as shown here"',title:'"Execution',example:!0,"-":!0,make:!0,sure:!0,to:!0,retype:!0,the:!0,input:!0,values:!0,as:!0,shown:!0,'here"':!0},"openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 1024 -out rootCA.crt\n##\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:SG\nState or Province Name (full name) []:Singapore\nLocality Name (eg, city) [Default City]:Singapore\nOrganization Name (eg, company) [Default Company Ltd]:nutanix\nOrganizational Unit Name (eg, section) []:rootca\nCommon Name (eg, your name or your server's hostname) []:rootca.ntnxlab.local\nEmail Address []:first.last@nutanix.com\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a configuration file for Prism Central's certificate parameters "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat << EOF > pc.conf\n[ req ]\ndefault_bits    = 2048\ndistinguished_name = req_distinguished_name\nreq_extensions   = req_ext\n[ req_distinguished_name ]\ncountryName     = Country Name (2 letter code)\nstateOrProvinceName = State or Province Name\nlocalityName    = Locality Name\norganizationName  = Organization Name\norganizationName_default = pc\ncommonName     = Common Name\ncommonName_default     = ntnxlab.local\n[ req_ext ]\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1  = pc.ntnxlab.local\nEOF\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create the private key and CSR for Prism Central"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl genrsa -out pc.key 2048\nopenssl req -new -sha256  -key pc.key -config ./pc.conf -out pc.csr\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Execution example - make sure to retype the input values as shown here"',title:'"Execution',example:!0,"-":!0,make:!0,sure:!0,to:!0,retype:!0,the:!0,input:!0,values:!0,as:!0,shown:!0,'here"':!0},"openssl req -new -sha256  -key pc.key -config ./pc.conf -out pc.csr\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) []:SG\nState or Province Name []:Singapore\nLocality Name []:Singapore\nOrganization Name [pc]:pc\nCommon Name [ntnxlab.local]:ntnxlab.local\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get your Prism Central's  DNS details from the CSR you created"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl req -noout -text -in pc.csr | grep DNS\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"DNS:pc.ntnxlab.local, DNS:prism.ntnxlab.local\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a file called pctext to store the DNS/SAN names"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo "subjectAltName = DNS:pc.ntnxlab.local" >> pctext\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Sign the CSR using rootCA's private key and produce a certificate for Prism Central"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl x509 -req -in pc.csr -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -out pc.crt -days 1024 -sha256 -extfile pctext\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"List the contents of the directory to make sure pc.crt, pc.key and rootCA.crt files are present"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls -l *.crt *.key | awk '{print $9}'\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"pc.crt               ## Prism Central's public certificate signed by Root CA\npc.key               ## Prism Central's private key\nrootCA.crt           ## Root CA's public certificate\nrootCA.key           ## Root CA's private key\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cat")," out the contents of ",(0,r.kt)("inlineCode",{parentName:"p"},"rootCA.crt"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"pc.key")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"pc.crt")," and copy them to the UserXX-WindowsToolsPC in separate files"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless"},"cat rootCA.crt\ncat pc.key\ncat pc.crt\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In WindowsToolVM (Eg WindowsToolVM2, 3 or 4), use Notepad to create three new files with the same names")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Copy the ouput of previous cat command of ",(0,r.kt)("inlineCode",{parentName:"p"},"rootCA.crt"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"pc.key")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"pc.crt")," files into to your WindowsToolVM in any directory"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(2328).Z,width:"925",height:"416"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Logon to Prism Central Web GUI on the WindowsToolsVM"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-url"},"https://pc.ntnxlab.local:9440/\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(426).Z,width:"1005",height:"781"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In Prism Central, go to **Settings "),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(2378).Z,width:"416",height:"72"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on SSL Certificate",(0,r.kt)("strong",{parentName:"p"},". Click on "),"Replace Certificate**"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(6218).Z,width:"991",height:"505"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select ",(0,r.kt)("strong",{parentName:"p"},"Import Key and Certificate")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(8106).Z,width:"613",height:"381"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Next"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Choose the following:"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Private Key Type")," - RSA 2048 bit ")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Private Key")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"pc.key"))),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Public Certificate")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"pc.crt"))),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"CA Certificate/Chain")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"rootCA.crt")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on ",(0,r.kt)("strong",{parentName:"p"},"Import Files")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(3405).Z,width:"410",height:"525"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Prism Central GUI will accept the certificate and restart for the changes to take effect. "),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(1989).Z,width:"441",height:"264"})),(0,r.kt)("p",{parentName:"li"},"You have now successfully installed SSL certificate on Prism Central."),(0,r.kt)("admonition",{parentName:"li",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Do not proceed to the next steps until Prism Central Certificate is installed without errors. "),(0,r.kt)("p",{parentName:"admonition"},"Contact your lab instructors if you need help with troubleshooting SSL certificate issues."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To make sure that the WindowsToolsPC has the rootCA certificate installed in the local, double click on the ",(0,r.kt)("inlineCode",{parentName:"p"},"rootCA.crt")," file in windows file explorer and select ",(0,r.kt)("strong",{parentName:"p"},"install Certificate")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(8917).Z,width:"622",height:"521"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Choose ",(0,r.kt)("strong",{parentName:"p"},"Local Machine")," as Store Location and click ",(0,r.kt)("strong",{parentName:"p"},"Next"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Choose ",(0,r.kt)("strong",{parentName:"p"},"Place all certificates in the following store")," and click ",(0,r.kt)("strong",{parentName:"p"},"Browse"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Choose ",(0,r.kt)("strong",{parentName:"p"},"Trusted Root Certification Authorities")," and click ",(0,r.kt)("strong",{parentName:"p"},"Next"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on ",(0,r.kt)("strong",{parentName:"p"},"Finish"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You will notice that the browser has no warning about about an untrusted PC site "),(0,r.kt)("admonition",{parentName:"li",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You may need to restart your browser if this isn't showing as a trusted site.")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(2456).Z,width:"1071",height:"709"})),(0,r.kt)("p",{parentName:"li"},"You have completed the configuring SSL certificate pre-requisites for IPI installation. "))),(0,r.kt)("h3",{id:"setting-up-cloud-credential-operator-utility-ccoctl"},"Setting up Cloud Credential Operator Utility (CCOCTL)"),(0,r.kt)("p",null,"Setting up of is necessary for Nutanix cluster credentials to be used with OCP cluster. "),(0,r.kt)("p",null,"Refer to ",(0,r.kt)("a",{parentName:"p",href:"https://docs.openshift.com/container-platform/4.7/authentication/managing_cloud_provider_credentials/about-cloud-credential-operator.html"},"Cloud Credential Operator CCO")," for more information. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the LinuxToolsVM (Eg LinuxToolVM1, 2, 3 or 4), download and setup ",(0,r.kt)("inlineCode",{parentName:"p"},"ccoctl")," using the following commands"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"RELEASE_IMAGE=$(openshift-install version | awk '/release image/ {print $3}')\n\nCCO_IMAGE=$(oc adm release info --image-for='cloud-credential-operator' $RELEASE_IMAGE)\n\noc image extract $CCO_IMAGE --file=\"/usr/bin/ccoctl\" -a pull_secret.json\n\nchmod u+x ccoctl && cp ccoctl /usr/local/bin/ \n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure the ccoctl file is present "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls -lh ccoctl \n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"-rwxr----- 1 root root 69M Sep 13 04:09 ccoctl\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a Prism Central credentials file in ",(0,r.kt)("inlineCode",{parentName:"p"},"creds")," directory"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{7}","{7}":!0},'mkdir creds\n##\ncat << EOF > creds/pc_credentials.yaml\ncredentials:\n- type: basic_auth\n  data:\n    prismCentral:\n      username: "admin"\n      password: "PC-PASSWORD"\nEOF\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"pc_credentials.yaml")," file to change your Prism Central password"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vi pc_credentials.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Extract the CredentialsRequests objects for Nutanix Prism Central and store in a ",(0,r.kt)("inlineCode",{parentName:"p"},"credreqs")," directory"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc adm release extract --credentials-requests --cloud=nutanix --to=credreqs -a pull_secret.json $RELEASE_IMAGE\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use the ccoctl tool to process the CredentialsRequests objects and generate secret manifest files. These manifests file will be used during OCP cluster Certification"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ccoctl nutanix create-shared-secrets --credentials-requests-dir=credreqs --output-dir=. --credentials-source-filepath=creds/pc_credentials.yaml\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"2022/09/29 23:53:36 Saved credentials configuration to: manifests/openshift-machine-api-nutanix-credentials-credentials.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Check the ",(0,r.kt)("inlineCode",{parentName:"p"},"manifests/openshift-machine-api-nutanix-credentials-credentials.yaml")," file to make sure the contents are good"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:"{8}","{8}":!0},"apiVersion: v1\nkind: Secret\nmetadata:\n   name: nutanix-credentials\n   namespace: openshift-machine-api\ntype: Opaque\ndata:\n   credentials: W3sidHlwZSI6ImJhc2ljX2F1dGgiLCJkYXRhIjp7InByaXNtQ2VudHJhbCI6eyJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJ0ZWNoWDIwMjAhIn0sInByaXNtRWxlbWVudHMiOm51bGx9fV0=\n")))),(0,r.kt)("h2",{id:"creating-ipi-installation-config-file"},"Creating IPI Installation Config File"),(0,r.kt)("p",null,"In this section we will create our installation configuration files which will be then used in the next section to deploy an OCP cluster."),(0,r.kt)("h3",{id:"preparing-userxx-linuxtoolsvm"},"Preparing UserXX-LinuxToolsVM"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Logon to your UserXX-LinuxToolsVM ")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Copy the Root CA's public certificate to the local certiface repository"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd /root/xyz\ncp rootCA.crt /etc/pki/ca-trust/source/anchors/\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update the local CA trust repository with the new one your created"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"update-ca-trust\n")),(0,r.kt)("p",{parentName:"li"},"Now your UserXX-LinuxToolsVM will be able to trust SSL connections to Prism Central and will ",(0,r.kt)("inlineCode",{parentName:"p"},"openshift-install")," binary")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a local ssh key which we will then use to access all the OCP cluster nodes/vms"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Execution example - accept default values and no passphrase"',title:'"Execution',example:!0,"-":!0,accept:!0,default:!0,values:!0,and:!0,no:!0,'passphrase"':!0},"Generating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa): \n/root/.ssh/id_rsa already exists.\nOverwrite (y/n)? y\nEnter passphrase (empty for no passphrase):  \nEnter same passphrase again: \nYour identification has been saved in /root/.ssh/id_rsa.\nYour public key has been saved in /root/.ssh/id_rsa.pub.\nThe key fingerprint is:\nSHA256:1gjz5zWw+aS7hiEje/pDGY2N5Y5anh6JEQYVf9GRmgs root@centos\nThe key's randomart image is:\n+---[RSA 2048]----+\n|  ..o.  ...o     |\n|   . .  ..o      |\n|    o +B.o.      |\n|   . .E=*o +     |\n|    .  *S.= +    |\n|    .oBo+o = .   |\n|    .Bo+ oo .    |\n|    o =.. ..     |\n|    .=o. .o.     |\n+----[SHA256]-----+\n")))),(0,r.kt)("h3",{id:"creating-the-installation-manifests-files"},"Creating the Installation Manifests (files)"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In your UserXX-LinuxToolsVM ")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Change to you working directory that we created before (if not there already)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd /root/xyz\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the create install config command"),(0,r.kt)("admonition",{parentName:"li",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Copy the pull_secret value from Red Hat Console or the ",(0,r.kt)("inlineCode",{parentName:"p"},"pull_secret.json")," file into your clipboard as you will need to input in the interactive command execution")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openshift-install create install-config \n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Execution example - use up and down arrow keys to choose options"',title:'"Execution',example:!0,"-":!0,use:!0,up:!0,and:!0,down:!0,arrow:!0,keys:!0,to:!0,choose:!0,'options"':!0},"# openshift-install create install-config \n? SSH Public Key /root/.ssh/id_rsa.pub\n? Platform nutanix\n? Prism Central pc.ntnxlab.local                   # << Your Prism Central FQDN address\n? Port 9440\n? Username admin\n? Password [? for help] **********                 # << Your Prism Central password entered as plain text\nINFO Connecting to Prism Central pc.ntnxlab.local \n? Prism Element PHX-SPOC018-4                      # << Choose your Prism Element cluster\nINFO Defaulting to only available network: Primary \n? Virtual IP Address for API 10.38.18.219          # << Type the API IP \n? Virtual IP Address for Ingress 10.38.18.220      # << Type the Ingress IP\n? Base Domain ntnxlab.local                        # << Type the name of your base domain \n? Cluster Name xyz                                 # << Type the name of your sub domain or OCP cluster's name\n? Pull Secret [? for help] ************************************************\nINFO Install-Config created in: .\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now we have to prepare the install-config.yaml file by adding the following details:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Your self hosted Root CA's certificate"),(0,r.kt)("li",{parentName:"ul"},"Number of replcas for worker nodes (3 workers to 2 worker)"),(0,r.kt)("li",{parentName:"ul"},"Machine network details (your HPOC's subnet)")))),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the details:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vim install-config.yaml\n# if vim is not present, install using #yum install -y vim\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Toggle me for a file editing tip"),(0,r.kt)("div",null,(0,r.kt)("body",null,"Using vim you can edit multiple lines in the ssl certificate block",(0,r.kt)("ol",{type:"1"},(0,r.kt)("li",null,'Move the cursor the to beigging on the line "-----BEGIN CERTIFICATE-----"'),(0,r.kt)("li",null,"Use ``crtl`` + ``v`` keyboard combination to enter visual block mode "),(0,r.kt)("li",null,'Select the lines until "-----END CERTIFICATE-----"'),(0,r.kt)("li",null,"Press ``I`` (capital I using Shift key)"),(0,r.kt)("li",null,"Type in two spaces"),(0,r.kt)("li",null,"Press ``esc`` key"),(0,r.kt)("li",null,"Type ``wq!``"))))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:'{4-13,19,35} title="Sample install-config.yaml file - Edit the highlighted parts"',"{4-13,19,35}":!0,title:'"Sample',"install-config.yaml":!0,file:!0,"-":!0,Edit:!0,the:!0,highlighted:!0,'parts"':!0},"apiVersion: v1\nbaseDomain: ntnxlab.local\nadditionalTrustBundle: | \n    -----BEGIN CERTIFICATE-----                                        ## << contents of rootCA.crt \n    MIIEBTCCAu2gAwIBAgIJAPDfr9SQbStmMA0GCSqGSIb3DQEBCwUAMIGYMQswCQYD\n    VQQGEwJKUDEOMAwGA1UECAwFQ2hpYmExEDAOBgNVBAcMB0thc2hpd2ExEDAOBgNV\n    BAoMB251dGFuaXgxDzANBgNVBAsMBnJvb3RjYTEdMBsGA1UEAwwUcm9vdGNhLm50\n    <snipped for brevity> \n    WtAYCgGyXEUNVltpXBg8M/0S3WLgkW+Z0r408vC4kIIHAWANfJiGt3qLYeVep91h\n    NDB2Cn14G9CSCN3Pb1jO2wz9sc1E3rEPo1VHjyOjWccDayTJ3i/lNz6taPbXcmV7\n    3ZIeb1v6oRYfB4O/XQMvonTHwTXgumBWOxGcoh5g4h9av+v4oPykJqJexNSbwtQy\n    m11nydu44BpIGL+LOm5z0jMd2JrSJFI2Fg==\n    -----END CERTIFICATE-----\ncompute:\n- architecture: amd64\n  hyperthreading: Enabled\n  name: worker\n  platform: {}\n  replicas: 3 ## << This can be just 2 nodes\ncontrolPlane:\n  architecture: amd64\n  hyperthreading: Enabled\n  name: master\n  platform: {}\n  replicas: 3\ncredentialsMode: Manual\nmetadata:\n  creationTimestamp: null\n  name: xyz\nnetworking:\n  clusterNetwork:\n  - cidr: 10.128.0.0/14\n    hostPrefix: 23\n  machineNetwork:\n  - cidr: 10.38.18.192/26   ## << This should be your HPOC cluster's subnet\n  networkType: OpenShiftSDN\n  serviceNetwork:\n  - 172.30.0.0/16\nplatform:\nnutanix:\n   apiVIP: 10.38.18.219\n   ingressVIP: 10.38.18.220\n   prismCentral:\n      endpoint:\n        address: pc.ntnxlab.local\n        port: 9440\n      password: techX2020!\n      username: admin\n   prismElements:\n   - endpoint:\n       address: 10.38.18.199\n       port: 9440\n     uuid: 0005e93a-3b29-fa1a-6b84-ac1f6b6922d1\n   subnetUUIDs:\n   - 34c84ddf-6c6e-46bf-9a5c-617b0b08a92c\npublish: External\npullSecret: '{\"auths\": ...}'\nsshKey: |\n  ssh-rsa AAAA..\n")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now we can create all the other manifests required for OCP cluster installation"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openshift-install create manifests\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"openshift-install create manifests\nINFO Consuming Install Config from target directory \nINFO Manifests created in: manifests and openshift\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Since we will be using CSI provisioned with Nutanix HCI storage later in the lab, we need to ",(0,r.kt)("strong",{parentName:"p"},"enable iSCSI daemon")," on all the worker nodes (optional for Master nodes) using ",(0,r.kt)("a",{parentName:"p",href:"https://docs.openshift.com/container-platform/4.10/post_installation_configuration/machine-configuration-tasks.html#machine-config-operator_post-install-machine-configuration-tasks"},"Machine Configuration Operator")," (MCO)."),(0,r.kt)("admonition",{parentName:"li",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"iSCSI daemon is usually in a disabled state while deploying OCP clusters. It is up to the customers to decide when and where to enable these daemons. "),(0,r.kt)("p",{parentName:"admonition"},"In our lab, we have decided to enable it now, so we can use Nutanix CSI to provide storage to applications. "),(0,r.kt)("p",{parentName:"admonition"},"Enabling iSCSI daemon at this stage prevents any reboot requirements after the cluster is deployed and serving workloads. ")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Create MCO config to start iSCSI daemon for worker nodes"',title:'"Create',MCO:!0,config:!0,to:!0,start:!0,iSCSI:!0,daemon:!0,for:!0,worker:!0,'nodes"':!0},"cat << EOF > manifests/99-worker-custom-enable-iscsid.yaml\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n  labels:\n    machineconfiguration.openshift.io/role: worker\n  name: 99-worker-custom-enable-iscsid\nspec:\n  config:\n    ignition:\n      version: 3.1.0\n    systemd:\n      units:\n      - enabled: true\n        name: iscsid.service\nEOF\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Optional - create MCO config to start iSCSI daemon for master nodes"',title:'"Optional',"-":!0,create:!0,MCO:!0,config:!0,to:!0,start:!0,iSCSI:!0,daemon:!0,for:!0,master:!0,'nodes"':!0},"cat << EOF > manifests/99-master-custom-enable-iscsid.yaml\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n  labels:\n    machineconfiguration.openshift.io/role: master\n  name: 99-master-custom-enable-iscsid\nspec:\n  config:\n    ignition:\n      version: 3.1.0\n    systemd:\n      units:\n      - enabled: true\n        name: iscsid.service\nEOF\n")))),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Check the contents of ",(0,r.kt)("inlineCode",{parentName:"p"},"manifests")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"openshift")," directories to make sure all the files are present (including iSCSI daemon MCO config. files)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls -l openshift manifests\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"We have one last requirement; to let IPI installer know that we will be using a self generated CA bundle. "),(0,r.kt)("p",{parentName:"li"},"Edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"manifests/cluster-proxy-01-config.yaml")," file to do this."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vi manifests/cluster-proxy-01-config.yaml\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:'{8} title="Add the user-ca-bundle as trusted CA"',"{8}":!0,title:'"Add',the:!0,"user-ca-bundle":!0,as:!0,trusted:!0,'CA"':!0},'apiVersion: config.openshift.io/v1\nkind: Proxy\nmetadata:\n  creationTimestamp: null\n  name: cluster\nspec:\n  trustedCA:\n    name: "user-ca-bundle" \nstatus: {}\n')))),(0,r.kt)("h2",{id:"deploying-ocp-cluster"},"Deploying OCP Cluster"),(0,r.kt)("p",null,"This will be simplest part of all, provided you have done everything correctly to this point. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start the installation of OCP cluster by executing the following"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nohup openshift-install create cluster &\n")),(0,r.kt)("admonition",{parentName:"li",title:"Do you Need more details about installation?",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"if you would like to see debug details and be able to capture logs, and also have access to the console, execute the following commands:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nohup openshift-install create cluster --log-level=debug &\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Now you can follow the nohup logs to see installation progress"',title:'"Now',you:!0,can:!0,follow:!0,the:!0,nohup:!0,logs:!0,to:!0,see:!0,installation:!0,'progress"':!0},"tail -f nohup.out\n")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A typical installation flow would look like this"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'{16,18} title="Install output - note the access information to the OCP cluster"',"{16,18}":!0,title:'"Install',output:!0,"-":!0,note:!0,the:!0,access:!0,information:!0,to:!0,OCP:!0,'cluster"':!0},'# openshift-install create cluster\nINFO Consuming Master Machines from target directory \nINFO Consuming OpenShift Install (Manifests) from target directory \nINFO Consuming Common Manifests from target directory \nINFO Consuming Openshift Manifests from target directory \nINFO Consuming Worker Machines from target directory \nINFO Creating infrastructure resources...         \nINFO Waiting up to 20m0s (until 8:16AM) for the Kubernetes API at https://api.xyz.ntnxlab.local:6443... \nINFO API v1.24.0+b62823b up                       \nINFO Waiting up to 30m0s (until 8:27AM) for bootstrapping to complete... \nINFO Destroying the bootstrap resources...        \nINFO Waiting up to 40m0s (until 8:49AM) for the clsuster at https://api.xyz.ntnxlab.local:6443 to initialize... \nINFO Waiting up to 10m0s (until 8:30AM) for the openshift-console route to be created... \nINFO Install complete!                            \nINFO To access the cluster as the system:admin user when using \'oc\', run \nINFO     export KUBECONFIG=/root/xyz/auth/kubeconfig \nINFO Access the OpenShift web-console here: https://console-openshift-console.apps.xyz.ntnxlab.local \nINFO Login to the console with user: "kubeadmin", and password: "xxxx-xxxx-xxxx-xxxx" \nINFO Time elapsed: 27m0s\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Once the installation is done we can access OCP cluster using the following ways:"),(0,r.kt)(l.Z,{groupId:"Login Method",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"kubeconfig file",label:"kubeconfig",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Export your kubeconfig file to env"',title:'"Export',your:!0,kubeconfig:!0,file:!0,to:!0,'env"':!0},"export KUBECONFIG=/root/xyz/auth/kubeconfig\n"))),(0,r.kt)(o.Z,{value:"kubeadmin credentials",label:"kubeadmin",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Make sure to use your password"',title:'"Make',sure:!0,to:!0,use:!0,your:!0,'password"':!0},"oc login -u kubeadmin -p xxxxx-xxxxx-xxxxx-xxxxx\n")))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc get nodes\n##\nNAME                     STATUS   ROLES    AGE     VERSION\nxyz-6zlwh-master-0       Ready    master   14m   v1.24.0+b62823b\nxyz-6zlwh-master-1       Ready    master   14m   v1.24.0+b62823b\nxyz-6zlwh-master-2       Ready    master   14m   v1.24.0+b62823b\nxyz-6zlwh-worker-czbn7   Ready    worker   14m   v1.24.0+b62823b\nxyz-6zlwh-worker-njv66   Ready    worker   14m   v1.24.0+b62823b\nxyz-6zlwh-worker-mlgbh   Ready    worker   14m   v1.24.0+b62823b\n")),(0,r.kt)("p",{parentName:"li"},"Through the OCP GUI using kubeadmin credentials"),(0,r.kt)("p",{parentName:"li"},"From your UserXX-WindowsToolsPC, open Chrome"),(0,r.kt)("p",{parentName:"li"},"Open the following URL"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-url"},"https://console-openshift-console.apps.xyz.ntnxlab.local\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(4131).Z,width:"1407",height:"626"})),(0,r.kt)("p",{parentName:"li"},"You have sucessfully installed OCP using IPI."))),(0,r.kt)("h2",{id:"cleanup-optional"},"Cleanup (optional)"),(0,r.kt)("p",null,"Run through the following if you would like to delete the OCP cluster. This step is optional for HPOC as it resets at the  end of reservation."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In your UserXX-LinuxToolsVM ")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Change to you working directory that we created before (if not there already)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd /root/xyz\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clean up with the following command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openshift-install destroy cluster \n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},'INFO Starting deletion of Nutanix infrastructure for Openshift cluster "xyz-6zlwh" \nINFO Virtual machines scheduled to be deleted:    \nINFO - xyz-6zlwh-master-2                         \nINFO - xyz-6zlwh-master-1                         \nINFO - xyz-6zlwh-master-0                         \nINFO - xyz-6zlwh-worker-qzslg                     \nINFO - xyz-6zlwh-worker-xjfk9    \nINFO - xyz-6zlwh-worker-mlgbh                 \nINFO Deleting VM xyz-6zlwh-master-2 with ID d7d5f8ac-6190-4708-93d7-c065f24f658c \nINFO Deleting VM xyz-6zlwh-master-1 with ID 050dca81-be33-4b9f-9868-44853810ea99 \nINFO Deleting VM xyz-6zlwh-master-0 with ID 13adfbae-3b22-443e-88e9-e8e58d2be78e \nINFO Deleting VM xyz-6zlwh-worker-qzslg with ID 93a3efc8-cdc6-4df9-a5d5-0ba420e033ab \nINFO Deleting VM xyz-6zlwh-worker-xjfk9 with ID 056f313e-b426-4ec3-a740-2c2ccd8e83ef\nINFO Deleting VM xyz-6zlwh-worker-mlgbh with ID 056f313e-b426-4ef6-a740-2c2ccd8e83vc \nINFO Deleting image "xyz-6zlwh-rhcos" with UUID "3001064e-46ce-4f62-b8d3-116a24eedf55" \nINFO Deleting category value : shared             \nINFO Deleting category value : owned              \nINFO Deleting category key : kubernetes-io-cluster-xyz-6zlwh \nINFO Time elapsed: 32s   \n')))),(0,r.kt)("p",null,"IPI installation method is simple and consistent to deploy as after the pre-rquisites are setup once. "),(0,r.kt)("p",null,"Customers can easily deploy as many OCP clusters on Nutanix HCI."))}d.isMDXComponent=!0},5767:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/IPI-UPI-d14018368ecbe38b3642189afa086c6e.png"},426:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/PC-Cert-1a-159170ae96cc1d93a30c424d758aefe3.png"},2378:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/PC-Cert-2-c7c1a739c2d42bcae77583881df3ce55.png"},6218:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/PC-Cert-3-e8e053ccc495dedf3da6ffcd7f21559e.png"},8106:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/PC-Cert-4-82d48d02881ff91aafe1eb69893d5c8d.png"},2328:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/certs-on-wintools-54cacbd7b8f33c645ed9fd8303da6395.png"},3405:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/import-certs-c67cb70ddc8ab5c92d0970e0acad1da2.png"},8917:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/install-rootCA-009b58bcaf7e2aa262de0cf422f91314.png"},4131:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ipi-installed-cluster-f77dfcb37251b37decfd9f06360571a0.png"},1989:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pc-crt-installed-452f74cbe7f3751ec61f46b6ecd22829.png"},2456:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/trusted-pc-6662d370eb4ddb64be854cc28db7ca7b.png"}}]);