"use strict";(self.webpackChunkocp_saurus_2=self.webpackChunkocp_saurus_2||[]).push([[6813],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),d=o,h=p["".concat(i,".").concat(d)]||p[d]||m[d]||r;return a?n.createElement(h,s(s({ref:t},u),{},{components:a})):n.createElement(h,s({ref:t},u))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,s=new Array(r);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:o,s[1]=l;for(var c=2;c<r;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(7294),o=a(6010);const r="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,s),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(7462),o=a(7294),r=a(6010),s=a(2389),l=a(7392),i=a(7094),c=a(2466);const u="tabList__CuJ",p="tabItem_LNqP";function m(e){const{lazy:t,block:a,defaultValue:s,values:m,groupId:d,className:h}=e,b=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),v=(0,l.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===s?s:s??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:k}=(0,i.U)(),[N,O]=(0,o.useState)(y),_=[],{blockElementScrollPositionUntilNextRender:w}=(0,c.o5)();if(null!=d){const e=g[d];null!=e&&e!==N&&f.some((t=>t.value===e))&&O(e)}const x=e=>{const t=e.currentTarget,a=_.indexOf(t),n=f[a].value;n!==N&&(w(t),O(n),null!=d&&k(d,String(n)))},C=e=>{let t=null;switch(e.key){case"Enter":x(e);break;case"ArrowRight":{const a=_.indexOf(e.currentTarget)+1;t=_[a]??_[0];break}case"ArrowLeft":{const a=_.indexOf(e.currentTarget)-1;t=_[a]??_[_.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},h)},f.map((e=>{let{value:t,label:a,attributes:s}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>_.push(e),onKeyDown:C,onClick:x},s,{className:(0,r.Z)("tabs__item",p,s?.className,{"tabs__item--active":N===t})}),a??t)}))),t?(0,o.cloneElement)(b.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function d(e){const t=(0,s.Z)();return o.createElement(m,(0,n.Z)({key:String(t)},e))}},716:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=a(7462),o=(a(7294),a(3905));a(5488),a(5162);const r={sidebar_position:7,title:"Volume Snapshot in Nutanix"},s="Volume Snapshot in Nutanix",l={unversionedId:"ocp_object/ocp_volume_snapshot",id:"ocp_object/ocp_volume_snapshot",title:"Volume Snapshot in Nutanix",description:"Use snapshots of persistent volume claims (PVCs) to create new PVCs and persistent volumes",source:"@site/docs/ocp_object/ocp_volume_snapshot.mdx",sourceDirName:"ocp_object",slug:"/ocp_object/ocp_volume_snapshot",permalink:"/ocp-saurus2/ocp_object/ocp_volume_snapshot",draft:!1,editUrl:"https://github.com/mat0606/ocp-saurus2/edit/main/docs/ocp_object/ocp_volume_snapshot.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Volume Snapshot in Nutanix"},sidebar:"tutorialSidebar",previous:{title:"Modify OpenShift Worker Node VM Sizing",permalink:"/ocp-saurus2/ocp_object/ocp_worker_nodes"},next:{title:"Install OADP & ODF",permalink:"/ocp-saurus2/ocp_object/ocp_odf"}},i={},c=[{value:"Create a Volume Snapshot Class",id:"create-a-volume-snapshot-class",level:2}],u={toc:c};function p(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"volume-snapshot-in-nutanix"},"Volume Snapshot in Nutanix"),(0,o.kt)("p",null,"Use snapshots of persistent volume claims (PVCs) to create new PVCs and persistent volumes\n(PVs) with Nutanix Volumes only. CSI driver supports taking volume snapshots and restoring\nthe volume. CSI driver creates a storage efficient snapshot in a second using the volumes\nsnapshot capability. You can also create a backup of your application in Nutanix Objects, AWS\nS3, or any S3 compatible storage.\nTaking a snapshot of a PVC lets you reuse the data in that snapshot to create a new PVC and\nPV in the future. The snapshot only stores data from the time you take the snapshot. The newly\ncreated snapshot appears as a VolumeSnapshot in the same Kubernetes cluster as the original\nPVC."),(0,o.kt)("h2",{id:"create-a-volume-snapshot-class"},"Create a Volume Snapshot Class"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Login to LinxToolVM (Eg LinuxToolVM1, LinuxToolVM2 etc)")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run this command.  This command assumes the CSI Driver was installed using RedHat OpenShift Console\nOperatorHub.  "),(0,o.kt)("p",{parentName:"li"},"If you had installed the CSI Driver through NCM Self Service, please replace the "),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"snapshotter-secret-namespace to ntnx-system.")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cat << EOF > ./volume-snapshot-class.yaml\napiVersion: snapshot.storage.k8s.io/v1beta1\nkind: VolumeSnapshotClass\nmetadata:\n  name: acs-abs-snapshot-class\ndriver: csi.nutanix.com\nparameters:\n  storageType: NutanixVolumes\n  csi.storage.k8s.io/snapshotter-secret-name: ntnx-secret\n  csi.storage.k8s.io/snapshotter-secret-namespace: openshift-cluster-csi-drivers\ndeletionPolicy: Delete\nEOF\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run this command to create the Volume Snapshot Class"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oc apply -f volume-snapshot-class.yaml\n")))))}p.isMDXComponent=!0}}]);