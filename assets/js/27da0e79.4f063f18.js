"use strict";(self.webpackChunkocp_saurus_2=self.webpackChunkocp_saurus_2||[]).push([[6307],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(a),d=r,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||s;return a?n.createElement(f,i(i({ref:t},u),{},{components:a})):n.createElement(f,i({ref:t},u))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const s="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(7462),r=a(7294),s=a(6010),i=a(2389),o=a(7392),l=a(7094),c=a(2466);const u="tabList__CuJ",p="tabItem_LNqP";function m(e){const{lazy:t,block:a,defaultValue:i,values:m,groupId:d,className:f}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=m??g.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),b=(0,o.l)(h,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===i?i:i??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==y&&!h.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:k}=(0,l.U)(),[N,x]=(0,r.useState)(y),O=[],{blockElementScrollPositionUntilNextRender:C}=(0,c.o5)();if(null!=d){const e=v[d];null!=e&&e!==N&&h.some((t=>t.value===e))&&x(e)}const _=e=>{const t=e.currentTarget,a=O.indexOf(t),n=h[a].value;n!==N&&(C(t),x(n),null!=d&&k(d,String(n)))},w=e=>{let t=null;switch(e.key){case"Enter":_(e);break;case"ArrowRight":{const a=O.indexOf(e.currentTarget)+1;t=O[a]??O[0];break}case"ArrowLeft":{const a=O.indexOf(e.currentTarget)-1;t=O[a]??O[O.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},f)},h.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>O.push(e),onKeyDown:w,onClick:_},i,{className:(0,s.Z)("tabs__item",p,i?.className,{"tabs__item--active":N===t})}),a??t)}))),t?(0,r.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function d(e){const t=(0,i.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},8852:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));a(5488),a(5162);const s={sidebar_position:7,title:"Option 2: Create Files Storage Class Deployment using Command Line"},i="Option 2: Nutanix Files StorageClass Deployment using Command Line",o={unversionedId:"ocp_ntnx_hci/ocp_sc_files2",id:"ocp_ntnx_hci/ocp_sc_files2",title:"Option 2: Create Files Storage Class Deployment using Command Line",description:"Nutanix CSI with Nutanix Files as a target provides ReadWriteMany (RWM) capabilities meaning many pods can write to to the target storage at the same time.",source:"@site/docs/ocp_ntnx_hci/ocp_sc_files2.mdx",sourceDirName:"ocp_ntnx_hci",slug:"/ocp_ntnx_hci/ocp_sc_files2",permalink:"/ocp-saurus2/ocp_ntnx_hci/ocp_sc_files2",draft:!1,editUrl:"https://github.com/mat0606/ocp-saurus2/edit/main/docs/ocp_ntnx_hci/ocp_sc_files2.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Option 2: Create Files Storage Class Deployment using Command Line"},sidebar:"tutorialSidebar",previous:{title:"Option 1: Create Files Storage Class Deployment using RedHat OpenShift Console",permalink:"/ocp-saurus2/ocp_ntnx_hci/ocp_sc_files"},next:{title:"Create Persistent Volume Claim for Nutanix Files",permalink:"/ocp-saurus2/ocp_ntnx_hci/ocp_files_pvc"}},l={},c=[{value:"Create File Share as a CSI target",id:"create-file-share-as-a-csi-target",level:3}],u={toc:c};function p(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"option-2-nutanix-files-storageclass-deployment-using-command-line"},"Option 2: Nutanix Files StorageClass Deployment using Command Line"),(0,r.kt)("p",null,"Nutanix CSI with Nutanix Files as a target provides ReadWriteMany (RWM) capabilities meaning many pods can write to to the target storage at the same time."),(0,r.kt)("p",null,"In this section we will install StorageClass with Nutanix Files target in ",(0,r.kt)("inlineCode",{parentName:"p"},"dynamic")," mode. "),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Curious about static mode?"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Static")," mode Files storage class is also available with Nutanix CSI. Use the following manifest to create this. The file share needs to manually created before the storage class can be configured."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{7-8}","{7-8}":!0},"apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: nutanix-files\nprovisioner: csi.nutanix.com\nparameters:\n  nfsPath: /my_nfs4_share         ##use the file share name - must be NFSv4\n  nfsServer: apjsme-fs.apjsme.com ##use the fqdn of your Nutanix Files server\n  storageType: NutanixFiles\n"))),(0,r.kt)("h3",{id:"create-file-share-as-a-csi-target"},"Create File Share as a CSI target"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use the following yaml file to create a storage class with Nutanix files as destination"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat << EOF > nutanix-dynfiles.yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: BootcampFS    \n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  description: "added by OCP dynamic provisioning"\nallowVolumeExpansion: true\nEOF\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Edit the file to make configure your file share and file server "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vi nutanix-dynfiles.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create the storage class "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc apply -f nutanix-dynfiles.yaml\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"storageclass.storage.k8s.io/nutanix-dynfiles created\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"List your storage classes"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oc get StorageClass -A\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"NAME                       PROVISIONER       RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE\nnutanix-dynfiles           csi.nutanix.com   Delete          Immediate           true                   67s\nnutanix-volumes (default)  csi.nutanix.com   Delete          Immediate           true                   17m   \n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Login to RedHat OpenShift console.  Click on ",(0,r.kt)("strong",{parentName:"p"},"Storage"),'.  Click on **StorageClasses" to verify the successful creation.'),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(8142).Z,width:"896",height:"218"})))),(0,r.kt)("p",null,"Now that you have deployed two storage classes with backend storage of Nutanix Volumes and Files, we will use them in our subesequent labs."))}p.isMDXComponent=!0},8142:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Files-SC2-1-c0ae2f925980db0251179d3d242dbfc0.png"}}]);